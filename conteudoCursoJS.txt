			Operadores | Aula 07 #parte1 

No JavaScript quando se tem mais de um operador em uma mesma operação
tem se a prioridade o segundo operador.
Exemplo: 5 + 3 / 2 = Na matemática humana o resultado é 4
		     No JavaScript o resultado é 6.5 - Primeiro ele calculou a divisão

Para que o resultado seja igual a linguagem humana é necessário por entre parênteses
a operação que você deseja que tenha prioridade.
Exemplo: (5 + 3) / 2 = 4

Ordem de precedência:
1º ()
2º **
3º * / %
4º + -

---

			Operadores Relacionais Identidade | Aula 07 #parte2

  5 ==   5  - TRUE
  5 ==  '5' - TRUE  // isso porque o javascript valida apenas o conteúdo não o tipo
  5 === '5' - FALSE // com 3 "=" o javascript passa a validar também o tipo do conteúdo
  5 ===  5  - TRUE  

Operadores Lógicos

  !  (negação)   - Não quero isso (Não)
  && (conjunção) - Quero isso E aquilo (E)
  || (disjunção) - Quero isso OU aquilo (OU)

Exemplo:

a = 5
b = 8

a > b && b % 2 == 0 
Ordem de precedência: 1º operadores aritméticos 
		      2º operadores relacionáis
		      3º operadores lógicos

*IMPORTANTES: Se em uma mesma função existir "!", "&&" e "||", segue a ordem:
1º "!"
2º "&&"
3º "||"


			Repetições | Aula 13 #parte1

1 - while: Estrutura de repetição utilizando o teste lógico no início

var c = 1
while(c <= 8) {
    console.log(`Passo ${c}`)
    c++
}

2 - do while: Estrutura de repetição utilizando o teste lógico no final

var c = 1
do {
    console.log(`Passo ${c}`)
    c++
} while (c <= 6 )

Repetições | Aula 14 #parte2

1 - for
ex.:

console.log('Vai começar...')
for (c = 1; c <= 5; c++) {
    console.log(c)
}

console.log('FIM!')

			Variáveis compostas | Aula 15 

Array ou Vetor

exemplo de declaração de um array:

	let num = [5,8,4]

adicionando valor no array em um índice específico:

	num[3] = 6 --> [5,8,4,6]

adicionando valor no array:

	num.push(7) --> [5,8,4,6,7]

descobrindo o tamanho de um array:

	num.length --> 5

ordenando os valores de um array:

	num.sort() --> [4,5,6,7,8]

descobrindo a posição em que um determinado valor está dentro do array:

	num.indexOf(8) --> 4

*caso o valor procurado não existir dentro do array, é retornado um valor -1 (não encontrado)

exemplo:
let num = [8,4,2,1,9]
num.push(3)
num.sort()
console.log(num)

let pos = num.indexOf(8)

if (pos == -1){
    console.log('Valor não encontrado!')
} else {
    console.log(`O valor 8 está na posição ${pos}!`)
}

aplicando a estrutura de repetição para mostrar os valores de um array:

let valores = [1,10,3,8,2,9]

for (let pos= 0; pos<valores.length; pos++){
    console.log(`A posição ${pos} tem o valor de ${valores[pos]}`)
}

RESPOSTA:

A posição 0 tem o valor de 1
A posição 1 tem o valor de 10
A posição 2 tem o valor de 3
A posição 3 tem o valor de 8
A posição 4 tem o valor de 2
A posição 5 tem o valor de 9

estrutura de repetição para variáveis compostas:

let num = [2,5,1,8,9]
num.sort()
// interpretação da linha de código abaixo: 
// para cada posição em num, faça:
for(let pos in num){ 
    console.log(num[pos])
}

