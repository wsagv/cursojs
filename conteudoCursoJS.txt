Operadores | Aula 07 #parte1 

No JavaScript quando se tem mais de um operador em uma mesma operação
tem se a prioridade o segundo operador.
Exemplo: 5 + 3 / 2 = Na matemática humana o resultado é 4
		     No JavaScript o resultado é 6.5 - Primeiro ele calculou a divisão

Para que o resultado seja igual a linguagem humana é necessário por entre parênteses
a operação que você deseja que tenha prioridade.
Exemplo: (5 + 3) / 2 = 4

Ordem de precedência:
1º ()
2º **
3º * / %
4º + -

---

Operadores Relacionais Identidade | Aula 07 #parte2

  5 ==   5  - TRUE
  5 ==  '5' - TRUE  // isso porque o javascript valida apenas o conteúdo não o tipo
  5 === '5' - FALSE // com 3 "=" o javascript passa a validar também o tipo do conteúdo
  5 ===  5  - TRUE  

Operadores Lógicos

  !  (negação)   - Não quero isso (Não)
  && (conjunção) - Quero isso E aquilo (E)
  || (disjunção) - Quero isso OU aquilo (OU)

Exemplo:

a = 5
b = 8

a > b && b % 2 == 0 
Ordem de precedência: 1º operadores aritméticos 
		      2º operadores relacionáis
		      3º operadores lógicos

*IMPORTANTES: Se em uma mesma função existir "!", "&&" e "||", segue a ordem:
1º "!"
2º "&&"
3º "||"


Repetições | Aula 13 #parte1

1 - while: Estrutura de repetição utilizando o teste lógico no início

var c = 1
while(c <= 8) {
    console.log(`Passo ${c}`)
    c++
}

2 - do while: Estrutura de repetição utilizando o teste lógico no final

var c = 1
do {
    console.log(`Passo ${c}`)
    c++
} while (c <= 6 )

Repetições | Aula 14 #parte2

1 - for
ex.:

console.log('Vai começar...')
for (c = 1; c <= 5; c++) {
    console.log(c)
}

console.log('FIM!')